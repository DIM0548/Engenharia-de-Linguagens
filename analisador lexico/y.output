Terminals unused in grammar

    ELSE
    RETURN
    DOT
    GT
    LT
    GTEQ
    LTEQ
    EQ
    AND
    OR
    INCREMENT
    DECREMENT


Grammar

    0 $accept: program $end

    1 program: stmlist

    2 stmlist: stm
    3        | stm stmlist

    4 stm: func_decl
    5    | ID ASSIGNMENT expr SEMICOLON
    6    | expr SEMICOLON
    7    | WHILE LCBRACKET stmlist RCBRACKET
    8    | IF LPAREN expr RPAREN LCBRACKET stmlist RCBRACKET

    9 func_decl: FUNCTION ID LPAREN param_list RPAREN COLON type LCBRACKET stmlist RCBRACKET

   10 param_list: ε
   11           | param
   12           | param COMMA param_list

   13 param: ID COLON type

   14 type: INTEGER
   15     | INTEGER LBRACKET RBRACKET

   16 expr: ID
   17     | NUMBER
   18     | expr PLUS expr
   19     | expr MINUS expr
   20     | expr MULTIPLY expr
   21     | expr SLASH expr
   22     | LPAREN expr RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUMBER <sValue> (258) 17
    ID <sValue> (259) 5 9 13 16
    INTEGER <sValue> (260) 14 15
    LCBRACKET (261) 7 8 9
    RCBRACKET (262) 7 8 9
    LPAREN (263) 8 9 22
    RPAREN (264) 8 9 22
    LBRACKET (265) 15
    RBRACKET (266) 15
    IF (267) 8
    ELSE (268)
    WHILE (269) 7
    FUNCTION (270) 9
    RETURN (271)
    DOT (272)
    COMMA (273) 12
    COLON (274) 9 13
    SEMICOLON (275) 5 6
    ASSIGNMENT (276) 5
    GT (277)
    LT (278)
    GTEQ (279)
    LTEQ (280)
    EQ (281)
    AND (282)
    OR (283)
    PLUS (284) 18
    MINUS (285) 19
    SLASH (286) 21
    INCREMENT (287)
    DECREMENT (288)
    MULTIPLY (289) 20


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1
        on right: 0
    stmlist (37)
        on left: 2 3
        on right: 1 3 7 8 9
    stm (38)
        on left: 4 5 6 7 8
        on right: 2 3
    func_decl (39)
        on left: 9
        on right: 4
    param_list (40)
        on left: 10 11 12
        on right: 9 12
    param <sValue> (41)
        on left: 13
        on right: 11 12
    type <sValue> (42)
        on left: 14 15
        on right: 9 13
    expr <sValue> (43)
        on left: 16 17 18 19 20 21 22
        on right: 5 6 8 18 19 20 21 22


State 0

    0 $accept: • program $end

    NUMBER    shift, and go to state 1
    ID        shift, and go to state 2
    LPAREN    shift, and go to state 3
    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    FUNCTION  shift, and go to state 6

    program    go to state 7
    stmlist    go to state 8
    stm        go to state 9
    func_decl  go to state 10
    expr       go to state 11


State 1

   17 expr: NUMBER •

    $default  reduce using rule 17 (expr)


State 2

    5 stm: ID • ASSIGNMENT expr SEMICOLON
   16 expr: ID •

    ASSIGNMENT  shift, and go to state 12

    $default  reduce using rule 16 (expr)


State 3

   22 expr: LPAREN • expr RPAREN

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 3

    expr  go to state 14


State 4

    8 stm: IF • LPAREN expr RPAREN LCBRACKET stmlist RCBRACKET

    LPAREN  shift, and go to state 15


State 5

    7 stm: WHILE • LCBRACKET stmlist RCBRACKET

    LCBRACKET  shift, and go to state 16


State 6

    9 func_decl: FUNCTION • ID LPAREN param_list RPAREN COLON type LCBRACKET stmlist RCBRACKET

    ID  shift, and go to state 17


State 7

    0 $accept: program • $end

    $end  shift, and go to state 18


State 8

    1 program: stmlist •

    $default  reduce using rule 1 (program)


State 9

    2 stmlist: stm •
    3        | stm • stmlist

    NUMBER    shift, and go to state 1
    ID        shift, and go to state 2
    LPAREN    shift, and go to state 3
    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    FUNCTION  shift, and go to state 6

    $default  reduce using rule 2 (stmlist)

    stmlist    go to state 19
    stm        go to state 9
    func_decl  go to state 10
    expr       go to state 11


State 10

    4 stm: func_decl •

    $default  reduce using rule 4 (stm)


State 11

    6 stm: expr • SEMICOLON
   18 expr: expr • PLUS expr
   19     | expr • MINUS expr
   20     | expr • MULTIPLY expr
   21     | expr • SLASH expr

    SEMICOLON  shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22
    SLASH      shift, and go to state 23
    MULTIPLY   shift, and go to state 24


State 12

    5 stm: ID ASSIGNMENT • expr SEMICOLON

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 3

    expr  go to state 25


State 13

   16 expr: ID •

    $default  reduce using rule 16 (expr)


State 14

   18 expr: expr • PLUS expr
   19     | expr • MINUS expr
   20     | expr • MULTIPLY expr
   21     | expr • SLASH expr
   22     | LPAREN expr • RPAREN

    RPAREN    shift, and go to state 26
    PLUS      shift, and go to state 21
    MINUS     shift, and go to state 22
    SLASH     shift, and go to state 23
    MULTIPLY  shift, and go to state 24


State 15

    8 stm: IF LPAREN • expr RPAREN LCBRACKET stmlist RCBRACKET

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 3

    expr  go to state 27


State 16

    7 stm: WHILE LCBRACKET • stmlist RCBRACKET

    NUMBER    shift, and go to state 1
    ID        shift, and go to state 2
    LPAREN    shift, and go to state 3
    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    FUNCTION  shift, and go to state 6

    stmlist    go to state 28
    stm        go to state 9
    func_decl  go to state 10
    expr       go to state 11


State 17

    9 func_decl: FUNCTION ID • LPAREN param_list RPAREN COLON type LCBRACKET stmlist RCBRACKET

    LPAREN  shift, and go to state 29


State 18

    0 $accept: program $end •

    $default  accept


State 19

    3 stmlist: stm stmlist •

    $default  reduce using rule 3 (stmlist)


State 20

    6 stm: expr SEMICOLON •

    $default  reduce using rule 6 (stm)


State 21

   18 expr: expr PLUS • expr

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 3

    expr  go to state 30


State 22

   19 expr: expr MINUS • expr

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 3

    expr  go to state 31


State 23

   21 expr: expr SLASH • expr

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 3

    expr  go to state 32


State 24

   20 expr: expr MULTIPLY • expr

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 3

    expr  go to state 33


State 25

    5 stm: ID ASSIGNMENT expr • SEMICOLON
   18 expr: expr • PLUS expr
   19     | expr • MINUS expr
   20     | expr • MULTIPLY expr
   21     | expr • SLASH expr

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22
    SLASH      shift, and go to state 23
    MULTIPLY   shift, and go to state 24


State 26

   22 expr: LPAREN expr RPAREN •

    $default  reduce using rule 22 (expr)


State 27

    8 stm: IF LPAREN expr • RPAREN LCBRACKET stmlist RCBRACKET
   18 expr: expr • PLUS expr
   19     | expr • MINUS expr
   20     | expr • MULTIPLY expr
   21     | expr • SLASH expr

    RPAREN    shift, and go to state 35
    PLUS      shift, and go to state 21
    MINUS     shift, and go to state 22
    SLASH     shift, and go to state 23
    MULTIPLY  shift, and go to state 24


State 28

    7 stm: WHILE LCBRACKET stmlist • RCBRACKET

    RCBRACKET  shift, and go to state 36


State 29

    9 func_decl: FUNCTION ID LPAREN • param_list RPAREN COLON type LCBRACKET stmlist RCBRACKET

    ID  shift, and go to state 37

    $default  reduce using rule 10 (param_list)

    param_list  go to state 38
    param       go to state 39


State 30

   18 expr: expr • PLUS expr
   18     | expr PLUS expr •
   19     | expr • MINUS expr
   20     | expr • MULTIPLY expr
   21     | expr • SLASH expr

    SLASH     shift, and go to state 23
    MULTIPLY  shift, and go to state 24

    $default  reduce using rule 18 (expr)


State 31

   18 expr: expr • PLUS expr
   19     | expr • MINUS expr
   19     | expr MINUS expr •
   20     | expr • MULTIPLY expr
   21     | expr • SLASH expr

    SLASH     shift, and go to state 23
    MULTIPLY  shift, and go to state 24

    $default  reduce using rule 19 (expr)


State 32

   18 expr: expr • PLUS expr
   19     | expr • MINUS expr
   20     | expr • MULTIPLY expr
   21     | expr • SLASH expr
   21     | expr SLASH expr •

    MULTIPLY  shift, and go to state 24

    $default  reduce using rule 21 (expr)


State 33

   18 expr: expr • PLUS expr
   19     | expr • MINUS expr
   20     | expr • MULTIPLY expr
   20     | expr MULTIPLY expr •
   21     | expr • SLASH expr

    $default  reduce using rule 20 (expr)


State 34

    5 stm: ID ASSIGNMENT expr SEMICOLON •

    $default  reduce using rule 5 (stm)


State 35

    8 stm: IF LPAREN expr RPAREN • LCBRACKET stmlist RCBRACKET

    LCBRACKET  shift, and go to state 40


State 36

    7 stm: WHILE LCBRACKET stmlist RCBRACKET •

    $default  reduce using rule 7 (stm)


State 37

   13 param: ID • COLON type

    COLON  shift, and go to state 41


State 38

    9 func_decl: FUNCTION ID LPAREN param_list • RPAREN COLON type LCBRACKET stmlist RCBRACKET

    RPAREN  shift, and go to state 42


State 39

   11 param_list: param •
   12           | param • COMMA param_list

    COMMA  shift, and go to state 43

    $default  reduce using rule 11 (param_list)


State 40

    8 stm: IF LPAREN expr RPAREN LCBRACKET • stmlist RCBRACKET

    NUMBER    shift, and go to state 1
    ID        shift, and go to state 2
    LPAREN    shift, and go to state 3
    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    FUNCTION  shift, and go to state 6

    stmlist    go to state 44
    stm        go to state 9
    func_decl  go to state 10
    expr       go to state 11


State 41

   13 param: ID COLON • type

    INTEGER  shift, and go to state 45

    type  go to state 46


State 42

    9 func_decl: FUNCTION ID LPAREN param_list RPAREN • COLON type LCBRACKET stmlist RCBRACKET

    COLON  shift, and go to state 47


State 43

   12 param_list: param COMMA • param_list

    ID  shift, and go to state 37

    $default  reduce using rule 10 (param_list)

    param_list  go to state 48
    param       go to state 39


State 44

    8 stm: IF LPAREN expr RPAREN LCBRACKET stmlist • RCBRACKET

    RCBRACKET  shift, and go to state 49


State 45

   14 type: INTEGER •
   15     | INTEGER • LBRACKET RBRACKET

    LBRACKET  shift, and go to state 50

    $default  reduce using rule 14 (type)


State 46

   13 param: ID COLON type •

    $default  reduce using rule 13 (param)


State 47

    9 func_decl: FUNCTION ID LPAREN param_list RPAREN COLON • type LCBRACKET stmlist RCBRACKET

    INTEGER  shift, and go to state 45

    type  go to state 51


State 48

   12 param_list: param COMMA param_list •

    $default  reduce using rule 12 (param_list)


State 49

    8 stm: IF LPAREN expr RPAREN LCBRACKET stmlist RCBRACKET •

    $default  reduce using rule 8 (stm)


State 50

   15 type: INTEGER LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 52


State 51

    9 func_decl: FUNCTION ID LPAREN param_list RPAREN COLON type • LCBRACKET stmlist RCBRACKET

    LCBRACKET  shift, and go to state 53


State 52

   15 type: INTEGER LBRACKET RBRACKET •

    $default  reduce using rule 15 (type)


State 53

    9 func_decl: FUNCTION ID LPAREN param_list RPAREN COLON type LCBRACKET • stmlist RCBRACKET

    NUMBER    shift, and go to state 1
    ID        shift, and go to state 2
    LPAREN    shift, and go to state 3
    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    FUNCTION  shift, and go to state 6

    stmlist    go to state 54
    stm        go to state 9
    func_decl  go to state 10
    expr       go to state 11


State 54

    9 func_decl: FUNCTION ID LPAREN param_list RPAREN COLON type LCBRACKET stmlist • RCBRACKET

    RCBRACKET  shift, and go to state 55


State 55

    9 func_decl: FUNCTION ID LPAREN param_list RPAREN COLON type LCBRACKET stmlist RCBRACKET •

    $default  reduce using rule 9 (func_decl)
