struct rational_t { // TODO: Variamos usar struct o class?
    int num; // Numerador
    int den; // Denominador
} // Estructs terminam com ponto e vírgula?

// Inicia uma rational_t com o valor de num/den
// Structs terão maneiras de inicializar valores? Exemplo: r: rational_t = new rational_t(1, 2);  ?
// Ou teremos que criar uma função para isso? Exemplo: r: rational_t = rational(1, 2); ?
// A partir de agora vou considerar que teremos que criar uma função para isso (rational)
function rational (num: int, den: int): rational_t {
    r: rational_t;
    r.num = num;
    r.den = den;
    return r;
}

// toString de uma rational_t
function toString (r: rational_t): string {
    return r.num + "/" + r.den; // TODO: Esse cast será feito automaticamente?
}

// Compara duas rational_t
function equals (r1: rational_t, r2: rational_t): bool {
    return r1.num == r2.num && r1.den == r2.den;
}

// Soma duas rational_t
function add (r1: rational_t, r2: rational_t): rational_t {
    r: rational(0, 0);
    r.num = r1.num * r2.den + r2.num * r1.den;
    r.den = r1.den * r2.den;
    return r;
}

// Subtrai duas rational_t
function sub (r1: rational_t, r2: rational_t): rational_t {
    r: rational(0, 0);
    r.num = r1.num * r2.den - r2.num * r1.den;
    r.den = r1.den * r2.den;
    return r;
}

// Multiplica duas rational_t
function mul (r1: rational_t, r2: rational_t): rational_t {
    r: rational(0, 0);
    r.num = r1.num * r2.num;
    r.den = r1.den * r2.den;
    return r;
}

// Inverso de uma rational_t
function inv (r: rational_t): rational_t {
    return rational(r.den, r.num);
}

// Divide duas rational_t (r1/r2) = r1 * inv(r2)
function div (r1: rational_t, r2: rational_t): rational_t {
    return mul(r1, inv(r2));
}

// Negação de uma rational_t (r1) = -r1
function neg (r: rational_t): rational_t {
    return rational(-r.num, r.den);
}


// Agora printa tudo isso
function main (): void {
    r1: rational_t = rational(1, 2);
    r2: rational_t = rational(1, 3);
    r3: rational_t = add(r1, r2);
    r4: rational_t = sub(r1, r2);
    r5: rational_t = mul(r1, r2);
    r6: rational_t = div(r1, r2);
    r7: rational_t = inv(r1);
    r8: rational_t = neg(r1);

    print("r1: ", toString(r1), " and r2: ", toString(r2), "\n");
    print("r1 + r2: ", toString(r3), "\n");
    print("r1 - r2: ", toString(r4), "\n");
    print("r1 * r2: ", toString(r5), "\n");
    print("r1 / r2: ", toString(r6), "\n");
    print("inv(r1): ", toString(r7), "\n");
    print("neg(r1): ", toString(r8), "\n");
}